# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'interface.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import pyqtgraph
from pyqtgraph import PlotWidget
import math
import fish


class Ui_MainWindow(object):

    def __init__(self, MainWindow):
        self.main_window = MainWindow
        self.setupUi(MainWindow)
        self.my_fish = fish.Fish()
        self.previous_fish = None
        self.draw_fish()

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1146, 870)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMaximumSize(QtCore.QSize(1146, 870))
        font = QtGui.QFont()
        font.setPointSize(14)
        MainWindow.setFont(font)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setObjectName("centralwidget")
        self.formLayout_5 = QtWidgets.QFormLayout(self.centralwidget)
        self.formLayout_5.setObjectName("formLayout_5")
        self.left_layout = QtWidgets.QVBoxLayout()
        self.left_layout.setObjectName("left_layout")
        self.move_box = QtWidgets.QGroupBox(self.centralwidget)
        self.move_box.setObjectName("move_box")
        self.formLayout = QtWidgets.QFormLayout(self.move_box)
        self.formLayout.setObjectName("formLayout")
        self.move_x_label = QtWidgets.QLabel(self.move_box)
        self.move_x_label.setObjectName("move_x_label")
        self.formLayout.setWidget(
            0, QtWidgets.QFormLayout.LabelRole, self.move_x_label)
        self.move_x_entry = QtWidgets.QLineEdit(self.move_box)
        self.move_x_entry.setObjectName("move_x_entry")
        self.formLayout.setWidget(
            0, QtWidgets.QFormLayout.FieldRole, self.move_x_entry)
        self.move_y_label = QtWidgets.QLabel(self.move_box)
        self.move_y_label.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.move_y_label.setObjectName("move_y_label")
        self.formLayout.setWidget(
            1, QtWidgets.QFormLayout.LabelRole, self.move_y_label)
        self.move_y_entry = QtWidgets.QLineEdit(self.move_box)
        self.move_y_entry.setObjectName("move_y_entry")
        self.formLayout.setWidget(
            1, QtWidgets.QFormLayout.FieldRole, self.move_y_entry)
        self.move_button = QtWidgets.QPushButton(self.move_box)
        self.move_button.setObjectName("move_button")
        self.formLayout.setWidget(
            2, QtWidgets.QFormLayout.SpanningRole, self.move_button)
        self.left_layout.addWidget(self.move_box)
        self.scale_box = QtWidgets.QGroupBox(self.centralwidget)
        self.scale_box.setObjectName("scale_box")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.scale_box)
        self.verticalLayout.setObjectName("verticalLayout")
        self.scale_center_label = QtWidgets.QLabel(self.scale_box)
        self.scale_center_label.setObjectName("scale_center_label")
        self.verticalLayout.addWidget(self.scale_center_label)
        self.scale_center_layout = QtWidgets.QFormLayout()
        self.scale_center_layout.setObjectName("scale_center_layout")
        self.scale_center_x_label = QtWidgets.QLabel(self.scale_box)
        self.scale_center_x_label.setObjectName("scale_center_x_label")
        self.scale_center_layout.setWidget(
            0, QtWidgets.QFormLayout.LabelRole, self.scale_center_x_label)
        self.scale_center_x_entry = QtWidgets.QLineEdit(self.scale_box)
        self.scale_center_x_entry.setObjectName("scale_center_x_entry")
        self.scale_center_layout.setWidget(
            0, QtWidgets.QFormLayout.FieldRole, self.scale_center_x_entry)
        self.scale_center_y_label = QtWidgets.QLabel(self.scale_box)
        self.scale_center_y_label.setObjectName("scale_center_y_label")
        self.scale_center_layout.setWidget(
            1, QtWidgets.QFormLayout.LabelRole, self.scale_center_y_label)
        self.scale_center_y_entry = QtWidgets.QLineEdit(self.scale_box)
        self.scale_center_y_entry.setObjectName("scale_center_y_entry")
        self.scale_center_layout.setWidget(
            1, QtWidgets.QFormLayout.FieldRole, self.scale_center_y_entry)
        self.verticalLayout.addLayout(self.scale_center_layout)
        self.scale_coef_label = QtWidgets.QLabel(self.scale_box)
        self.scale_coef_label.setObjectName("scale_coef_label")
        self.verticalLayout.addWidget(self.scale_coef_label)
        self.scale_coef_layout = QtWidgets.QFormLayout()
        self.scale_coef_layout.setObjectName("scale_coef_layout")
        self.scale_kx_label = QtWidgets.QLabel(self.scale_box)
        self.scale_kx_label.setObjectName("scale_kx_label")
        self.scale_coef_layout.setWidget(
            0, QtWidgets.QFormLayout.LabelRole, self.scale_kx_label)
        self.scale_kx_entry = QtWidgets.QLineEdit(self.scale_box)
        self.scale_kx_entry.setObjectName("scale_kx_entry")
        self.scale_coef_layout.setWidget(
            0, QtWidgets.QFormLayout.FieldRole, self.scale_kx_entry)
        self.scale_ky_label = QtWidgets.QLabel(self.scale_box)
        self.scale_ky_label.setObjectName("scale_ky_label")
        self.scale_coef_layout.setWidget(
            1, QtWidgets.QFormLayout.LabelRole, self.scale_ky_label)
        self.scale_ky_entry = QtWidgets.QLineEdit(self.scale_box)
        self.scale_ky_entry.setObjectName("scale_ky_entry")
        self.scale_coef_layout.setWidget(
            1, QtWidgets.QFormLayout.FieldRole, self.scale_ky_entry)
        self.verticalLayout.addLayout(self.scale_coef_layout)
        self.scale_button = QtWidgets.QPushButton(self.scale_box)
        self.scale_button.setObjectName("scale_button")
        self.verticalLayout.addWidget(self.scale_button)
        self.left_layout.addWidget(self.scale_box)
        self.rotate_box = QtWidgets.QGroupBox(self.centralwidget)
        self.rotate_box.setObjectName("rotate_box")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.rotate_box)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.rotate_center_label = QtWidgets.QLabel(self.rotate_box)
        self.rotate_center_label.setObjectName("rotate_center_label")
        self.verticalLayout_2.addWidget(self.rotate_center_label)
        self.rotate_center_layout = QtWidgets.QFormLayout()
        self.rotate_center_layout.setObjectName("rotate_center_layout")
        self.rotate_center_x_label = QtWidgets.QLabel(self.rotate_box)
        self.rotate_center_x_label.setObjectName("rotate_center_x_label")
        self.rotate_center_layout.setWidget(
            0, QtWidgets.QFormLayout.LabelRole, self.rotate_center_x_label)
        self.rotate_center_x_entry = QtWidgets.QLineEdit(self.rotate_box)
        self.rotate_center_x_entry.setObjectName("rotate_center_x_entry")
        self.rotate_center_layout.setWidget(
            0, QtWidgets.QFormLayout.FieldRole, self.rotate_center_x_entry)
        self.rotate_center_y_label = QtWidgets.QLabel(self.rotate_box)
        self.rotate_center_y_label.setObjectName("rotate_center_y_label")
        self.rotate_center_layout.setWidget(
            1, QtWidgets.QFormLayout.LabelRole, self.rotate_center_y_label)
        self.rotate_center_y_entry = QtWidgets.QLineEdit(self.rotate_box)
        self.rotate_center_y_entry.setObjectName("rotate_center_y_entry")
        self.rotate_center_layout.setWidget(
            1, QtWidgets.QFormLayout.FieldRole, self.rotate_center_y_entry)
        self.verticalLayout_2.addLayout(self.rotate_center_layout)
        self.rotate_angle_label = QtWidgets.QLabel(self.rotate_box)
        self.rotate_angle_label.setObjectName("rotate_angle_label")
        self.verticalLayout_2.addWidget(self.rotate_angle_label)
        self.rotate_angle_entry = QtWidgets.QLineEdit(self.rotate_box)
        self.rotate_angle_entry.setObjectName("rotate_angle_entry")
        self.verticalLayout_2.addWidget(self.rotate_angle_entry)
        self.rotate_button = QtWidgets.QPushButton(self.rotate_box)
        self.rotate_button.setObjectName("rotate_button")
        self.verticalLayout_2.addWidget(self.rotate_button)
        self.left_layout.addWidget(self.rotate_box)
        self.formLayout_5.setLayout(
            0, QtWidgets.QFormLayout.LabelRole, self.left_layout)
        self.right_layout = QtWidgets.QVBoxLayout()
        self.right_layout.setObjectName("right_layout")
        self.my_plot_view = PlotWidget(self.centralwidget)
        self.my_plot_view.showGrid(x=True, y=True, alpha=1.0)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.my_plot_view.sizePolicy().hasHeightForWidth())
        self.my_plot_view.setSizePolicy(sizePolicy)
        self.my_plot_view.setMinimumSize(QtCore.QSize(800, 800))
        self.my_plot_view.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.my_plot_view.setLineWidth(1)
        self.my_plot_view.setMidLineWidth(0)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.NoBrush)
        self.my_plot_view.setBackgroundBrush(brush)
        self.my_plot_view.setObjectName("my_plot_view")
        self.right_layout.addWidget(self.my_plot_view)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.back_button = QtWidgets.QPushButton(self.centralwidget)
        self.back_button.setObjectName("back_button")
        self.back_button.setDisabled(True)
        self.horizontalLayout.addWidget(self.back_button)
        self.reset_button = QtWidgets.QPushButton(self.centralwidget)
        self.reset_button.setObjectName("reset_button")
        self.horizontalLayout.addWidget(self.reset_button)
        self.info_button = QtWidgets.QPushButton(self.centralwidget)
        self.info_button.setObjectName("info_button")
        self.horizontalLayout.addWidget(self.info_button)
        self.right_layout.addLayout(self.horizontalLayout)
        self.formLayout_5.setLayout(
            0, QtWidgets.QFormLayout.FieldRole, self.right_layout)
        MainWindow.setCentralWidget(self.centralwidget)
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.info_button.clicked.connect(lambda: self.show_info())
        self.reset_button.clicked.connect(lambda: self.reset())
        self.move_button.clicked.connect(lambda: self.move())
        self.back_button.clicked.connect(lambda: self.back())
        self.scale_button.clicked.connect(lambda: self.scale())
        self.rotate_button.clicked.connect(lambda: self.rotate())

    def show_info(self):
        message = """\
Программа выполнена в рамках учебного курса: Компьютерная графика.
Руководитель курса: Куров А.В.

Автором данной программы является студент МГТУ им. Н.Э. Баумана группы ИУ7-46Б,
Леонов Владислав Вячеславович.

Версия: 1.0.0"""
        msg_box = QtWidgets.QMessageBox.about(
            self.main_window, "О программе", message)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate(
            "MainWindow", "Преобразования на плоскости"))
        self.move_box.setTitle(_translate("MainWindow", "Перенос"))
        self.move_x_label.setText(_translate("MainWindow", "X"))
        self.move_y_label.setText(_translate("MainWindow", "Y"))
        self.move_button.setText(_translate("MainWindow", "Выполнить"))
        self.scale_box.setTitle(_translate("MainWindow", "Масштабирование"))
        self.scale_center_label.setText(_translate(
            "MainWindow", "Центр масштабирования"))
        self.scale_center_x_label.setText(_translate("MainWindow", "X:"))
        self.scale_center_y_label.setText(_translate("MainWindow", "Y:"))
        self.scale_coef_label.setText(_translate("MainWindow", "Коэффициенты"))
        self.scale_kx_label.setText(_translate("MainWindow", "kx:"))
        self.scale_ky_label.setText(_translate("MainWindow", "ky:"))
        self.scale_button.setText(_translate("MainWindow", "Выполнить"))
        self.rotate_box.setTitle(_translate("MainWindow", "Поворот"))
        self.rotate_center_label.setText(
            _translate("MainWindow", "Центр поворота"))
        self.rotate_center_x_label.setText(_translate("MainWindow", "X"))
        self.rotate_center_y_label.setText(_translate("MainWindow", "Y"))
        self.rotate_angle_label.setText(_translate(
            "MainWindow", "Угол поворота (в градусах)"))
        self.rotate_button.setText(_translate("MainWindow", "Выполнить"))
        self.back_button.setText(_translate("MainWindow", "Назад"))
        self.reset_button.setText(_translate("MainWindow", "Сброс"))
        self.info_button.setText(_translate("MainWindow", "О программе"))

    def draw_fish(self):
        self.my_plot_view.plot(x=self.my_fish.body_x, y=self.my_fish.body_y,
                               pen=pyqtgraph.mkPen((200, 0, 0), width=3))
        self.my_plot_view.plot(x=self.my_fish.head_x, y=self.my_fish.head_y,
                               pen=pyqtgraph.mkPen((200, 0, 0), width=3))
        self.my_plot_view.plot(x=self.my_fish.eye_x, y=self.my_fish.eye_y,
                               pen=pyqtgraph.mkPen((200, 0, 0), width=3))
        self.my_plot_view.plot(x=self.my_fish.mouth_x, y=self.my_fish.mouth_y,
                               pen=pyqtgraph.mkPen((200, 0, 0), width=3))
        self.my_plot_view.plot(x=self.my_fish.upper_fin_x,
                               y=self.my_fish.upper_fin_y, pen=pyqtgraph.mkPen((200, 0, 0), width=3))
        self.my_plot_view.plot(x=self.my_fish.bottom_fin_x,
                               y=self.my_fish.bottom_fin_y, pen=pyqtgraph.mkPen((200, 0, 0), width=3))
        self.my_plot_view.plot(x=self.my_fish.tail_x, y=self.my_fish.tail_y,
                               pen=pyqtgraph.mkPen((200, 0, 0), width=3))

        self.my_plot_view.setXRange(-30, 30, padding=0)
        self.my_plot_view.setYRange(-30, 30, padding=0)

    def reset(self):
        self.my_fish = fish.Fish()
        self.my_plot_view.clear()
        self.back_button.setDisabled(True)
        self.draw_fish()

    def back(self):
        self.my_fish = self.previous_fish
        self.previous_fish = None
        self.my_plot_view.clear()
        self.back_button.setDisabled(True)
        self.draw_fish()

    def move(self):
        dx = self.move_x_entry.text()
        dy = self.move_y_entry.text()
        if (dx == "" or dy == ""):
            message = "Заполните все поля смещения"
            msg_box = QtWidgets.QMessageBox.warning(
                self.main_window, "Внимание", message)
            return
        try:
            dx = float(dx)
            dy = float(dy)
            self.previous_fish = self.my_fish.copy()
            self.back_button.setDisabled(False)
            self.my_fish.move(dx, dy)
            self.my_plot_view.clear()
            self.draw_fish()
        except ValueError:
            message = "Некорректный ввод значений смещения. Проверьте, что ввели числа"
            msg_box = QtWidgets.QMessageBox.warning(
                self.main_window, "Внимание", message)

    def scale(self):
        center_x = self.scale_center_x_entry.text()
        center_y = self.scale_center_y_entry.text()
        if (center_x == "" or center_y == ""):
            message = "Заполните поля центра масштабирования"
            msg_box = QtWidgets.QMessageBox.warning(
                self.main_window, "Внимание", message)
            return
        try:
            center_x = float(center_x)
            center_y = float(center_y)
        except ValueError:
            message = "Некорректный ввод значений центра масштабирования. Проверьте, что ввели числа"
            msg_box = QtWidgets.QMessageBox.warning(
                self.main_window, "Внимание", message)
            return
        kx = self.scale_kx_entry.text()
        ky = self.scale_ky_entry.text()
        if (kx == "" or ky == ""):
            message = "Заполните поля коэффициентов масштабирования"
            msg_box = QtWidgets.QMessageBox.warning(
                self.main_window, "Внимание", message)
            return
        try:
            kx = float(kx)
            ky = float(ky)
        except ValueError:
            message = "Некорректный ввод значений коэффициентов масштабирования. Проверьте, что ввели числа"
            msg_box = QtWidgets.QMessageBox.warning(
                self.main_window, "Внимание", message)
            return
        self.previous_fish = self.my_fish.copy()
        self.back_button.setDisabled(False)
        self.my_fish.scale(center_x, center_y, kx, ky)
        self.my_plot_view.clear()
        self.draw_fish()

    def rotate(self):
        center_x = self.rotate_center_x_entry.text()
        center_y = self.rotate_center_y_entry.text()
        if (center_x == "" or center_y == ""):
            message = "Заполните поля центра поворота"
            msg_box = QtWidgets.QMessageBox.warning(
                self.main_window, "Внимание", message)
            return
        try:
            center_x = float(center_x)
            center_y = float(center_y)
        except ValueError:
            message = "Некорректный ввод значений центра поворота. Проверьте, что ввели числа"
            msg_box = QtWidgets.QMessageBox.warning(
                self.main_window, "Внимание", message)
            return
        angle = self.rotate_angle_entry.text()
        if (angle == ""):
            message = "Заполните поле угла поворота"
            msg_box = QtWidgets.QMessageBox.warning(
                self.main_window, "Внимание", message)
            return
        try:
            angle = float(angle)
        except ValueError:
            message = "Некорректный ввод значения угла поворота. Проверьте, что ввели числа"
            msg_box = QtWidgets.QMessageBox.warning(
                self.main_window, "Внимание", message)
            return
        self.previous_fish = self.my_fish.copy()
        self.back_button.setDisabled(False)
        self.my_fish.rotate(center_x, center_y, angle)
        self.my_plot_view.clear()
        self.draw_fish()